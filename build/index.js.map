{"version":3,"file":"index.js","names":["_express","_interopRequireDefault","require","_bodyParser","_cookieParser","_cors","_morgan","_path","_fs","_routes","_authutil","e","__esModule","_slicedToArray","r","_arrayWithHoles","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","TypeError","a","_arrayLikeToArray","t","toString","call","slice","constructor","name","Array","from","test","length","n","l","Symbol","iterator","i","u","f","o","next","Object","done","push","value","isArray","app","express","use","cors","origin","credentials","cookieParser","req","res","header","baseDir","path","resolve","rfs","logDirectory","join","fs","existsSync","mkdirSync","accessLogStream","createStream","size","interval","morgan","stream","set","process","env","PORT","console","log","engine","renderFile","bodyParser","json","urlencoded","extended","startsWith","auth_header","headers","authorization","_auth_header$split","split","_auth_header$split2","token","checkToken","callback","jwtresult","status","users","message","routes","server","listen","get"],"sources":["../src/index.js"],"sourcesContent":["import express from 'express';\r\nimport bodyParser from 'body-parser';\r\nimport cookieParser from 'cookie-parser';\r\nimport cors from 'cors';\r\nimport morgan from 'morgan';\r\nimport path from 'path';\r\nimport fs from 'fs';\r\nimport routes from './routes';\r\nimport { checkToken } from './authutil'\r\n\r\nconst app = express();\r\n\r\napp.use(\r\n  cors({\r\n    origin: ['http://localhost:5173','https://testapp.com', 'http://react.test.com:5173'],\r\n    credentials: true\r\n  })\r\n);\r\n\r\napp.use(cookieParser());\r\n\r\n// Cache-Control 헤더 설정 (중복 제거)\r\napp.use(function (req, res, next) {\r\n    res.header('Cache-Control', 'private, no-cache, no-store, must-revalidate');\r\n    res.header('Expires', '-1');\r\n    res.header('Pragma', 'no-cache');\r\n    next()\r\n});\r\n\r\n//-- 로깅\r\nvar baseDir = path.resolve('.');\r\n\r\nconst rfs = require(\"rotating-file-stream\");\r\nconst logDirectory = path.join(baseDir, '/log')\r\nfs.existsSync(logDirectory) || fs.mkdirSync(logDirectory)\r\nconst accessLogStream = rfs.createStream(\"access.log\", {\r\n  size: \"10M\",\r\n  interval: \"1d\",\r\n  path: logDirectory\r\n});\r\n\r\napp.use(morgan('combined', {stream: accessLogStream}))\r\n\r\napp.set('port', (process.env.PORT || 3000));\r\n\r\napp.use(express.static(baseDir + '/public'));\r\nconsole.log(baseDir + '/views');\r\napp.set('views', baseDir + '/views');\r\napp.set('view engine', 'ejs');\r\napp.engine('html', require('ejs').renderFile);\r\napp.use(bodyParser.json());\r\napp.use(bodyParser.urlencoded({\r\n  extended: true\r\n}));\r\n\r\n//권한 검증용 MW\r\napp.use((req, res, next) => {\r\n  if (!req.path.startsWith('/todolist') && !req.path.startsWith('/todolist_long')) {\r\n    next();\r\n    return;\r\n  } \r\n  //console.log(\"## JWT Middleware!! : \" + req.path)\r\n  let auth_header = req.headers.authorization;\r\n  if (auth_header) {\r\n      let [ name, token ] = auth_header.split(\" \")\r\n      if (typeof(name) === \"string\" && name === \"Bearer\") {\r\n        checkToken({ token, callback: (jwtresult) => {\r\n          if (jwtresult.status === \"success\") {\r\n            req.users = jwtresult.users;\r\n            next()\r\n          } else {\r\n            res.json(jwtresult);\r\n          }\r\n        }})\r\n      } else {\r\n        res.json({ status:\"fail\", message:\"토큰의 형식이 올바르지 않습니다. Bearer Token 형식을 사용합니다.\" })\r\n      }\r\n  } else {\r\n      res.json({ status:\"fail\", message:\"authorization 요청 헤더를 통해 토큰이 전달되지 않았습니다.\" })\r\n  }\r\n\r\n});\r\n\r\nroutes(app);\r\n\r\nconst server = app.listen(app.get('port'), function() {\r\n    console.log(\"할일 목록 서비스가 \" + app.get('port') + \"번 포트에서 시작되었습니다!\");\r\n});"],"mappings":"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","ignoreList":[]}