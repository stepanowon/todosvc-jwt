{"version":3,"file":"routes.js","names":["_tododao","require","_authutil","_default","exports","app","get","req","res","console","log","render","title","subtitle","post","_req$body","body","userid","password","username","hashedPassword","computeHMAC","result","createUser","json","_req$body2","doc","findUser","status","token","createToken","role","message","users","response","getTodoList","_req$body3","todo","desc","addTodo","id","parseInt","params","deleteTodo","next","err","Error","use","jsonp"],"sources":["../src/routes.js"],"sourcesContent":["import { createUser, findUser , getTodoList, addTodo, deleteTodo } from './tododao';\r\nimport { createToken, computeHMAC } from './authutil';\r\n\r\nexport default (app) => { \r\n\r\n    app.get('/', (req, res) => {\r\n        console.log(\"### GET /\");\r\n        res.render('index', {\r\n             title: 'jwt 인증 테스트 서비스 v1.0',\r\n             subtitle : '(node.js + express + lokijs + jwt)'\r\n        })\r\n    });\r\n\r\n    app.post('/users/create', (req, res)=> {\r\n        console.log(\"### POST /users/create\");\r\n        let { userid, password, username } = req.body;\r\n        let hashedPassword = computeHMAC(userid, password);\r\n        const result = createUser({ userid, username, password:hashedPassword });\r\n        res.json(result);\r\n    })\r\n\r\n    app.post('/login', (req,res)=> {\r\n        console.log(\"### POST /login\")\r\n        let { userid, password } = req.body;\r\n        let hashedPassword = computeHMAC(userid, password);\r\n        const doc = findUser({ userid, password:hashedPassword });\r\n        if (doc && doc.status === \"success\") {\r\n            let token = createToken({ userid: userid, role:\"users\" })\r\n            res.json({ status:\"success\", message:\"로그인 성공\", token:token })\r\n        } else {\r\n            res.json(doc)\r\n        }\r\n    })\r\n\r\n    app.get('/todolist',  (req,res)=> {\r\n        console.log(\"### GET /todolist : \" + req.users.userid);\r\n        let userid = req.users.userid;\r\n        let response = getTodoList({ userid });\r\n        res.json(response);\r\n    })\r\n\r\n    app.post('/todolist', (req,res) => {\r\n        console.log(\"### POST /todolist : \" + req.users.userid);\r\n        let userid = req.users.userid;\r\n        let { todo, desc } = req.body;\r\n        let response = addTodo({ userid, todo, desc })\r\n        res.json(response);\r\n    })\r\n\r\n    app.delete('/todolist/:id', (req, res)=> {\r\n        console.log(\"### PUT /todolist/:id : \" + req.users.userid);\r\n        let userid = req.users.userid;\r\n        let id = parseInt(req.params.id, 10);\r\n        let response = deleteTodo({ userid, id });\r\n        res.json(response);\r\n    })\r\n    \r\n    //----에러 처리 시작\r\n    app.get('*', (req, res, next) => {\r\n        var err = new Error();\r\n        err.status = 404;\r\n        next(err);\r\n    });\r\n\r\n    app.use((err, req, res, next) => {\r\n        console.log(\"### ERROR!!\")\r\n        if(err.status === 404) {\r\n            res.status(404).json({ status:404, message:\"잘못된 URI 요청\"});\r\n        } else if (err.status === 500) {\r\n            res.status(500).json({ status:500, message:\"내부 서버 오류\"});\r\n        } else {\r\n            res.status(err.status).jsonp({ status:\"fail\", message:err.message });\r\n        }\r\n    });\r\n\r\n\r\n}"],"mappings":"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"}