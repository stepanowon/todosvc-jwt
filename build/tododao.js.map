{"version":3,"file":"tododao.js","names":["_lokijs","_interopRequireDefault","require","_authutil","obj","__esModule","_typeof","o","Symbol","iterator","constructor","prototype","ownKeys","e","r","t","Object","keys","getOwnPropertySymbols","filter","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","arguments","length","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","key","value","_toPropertyKey","configurable","writable","i","_toPrimitive","String","toPrimitive","call","TypeError","Number","ts","Date","getTime","todoList","users","databaseInitialize","db","getCollection","addCollection","indices","insert","userid","id","todo","desc","password","computeHMAC","username","loki","autoload","autoloadCallback","autosave","autosaveInterval","findUser","exports","_ref","console","log","userOne","findOne","status","message","ex","createUser","_ref2","doc","Error","getTodoList","_ref3","result","queryResult","chain","find","simplesort","data","item","meta","owner","addTodo","_ref4","trim","deleteTodo","_ref5","one","remove"],"sources":["../src/tododao.js"],"sourcesContent":["import loki from \"lokijs\";\r\nimport { computeHMAC } from './authutil';\r\n\r\nlet ts = new Date().getTime();\r\nlet todoList, users;\r\n\r\nlet databaseInitialize= () => {\r\n    todoList = db.getCollection(\"todoList\");\r\n    if (todoList === null) {\r\n        todoList = db.addCollection('todoList', { indices: ['userid','id'] });\r\n        //샘플 데이터\r\n        todoList.insert({ userid: \"gdhong\", id: ++ts, todo: \"ES6공부를 해야 합니다\", desc:\"설명1\" });\r\n        todoList.insert({ userid: \"gdhong\", id: ++ts, todo: \"리액트 학습\", desc:\"리액트 학습을 해야 합니다\" }, );\r\n        todoList.insert({ userid: \"mrlee\", id: ++ts, todo: \"남원구경\", desc:\"고향집에 가봐야합니다.\" });\r\n        todoList.insert({ userid: \"mrlee\", id: ++ts, todo: \"Redux 마스터\", desc:\"Redux를 이해하는 것은 중요해\" });\r\n    }\r\n    users = db.getCollection(\"users\");\r\n    if (users === null) {\r\n        users = db.addCollection(\"users\", { indices: [\"userid\",\"password\"] });\r\n        users.insert({ userid: \"gdhong\", password:computeHMAC(\"gdhong\",\"1234\"), username:\"홍길동\" });\r\n        users.insert({ userid: \"mrlee\", password:computeHMAC(\"mrlee\",\"1234\"), username:\"이몽룡\" });\r\n    }\r\n}\r\n\r\n//let db = new loki();\r\nvar db = new loki('sample.db', {\r\n\tautoload: true,\r\n\tautoloadCallback : databaseInitialize,\r\n\tautosave: true,\r\n\tautosaveInterval: 10000\r\n});\r\n\r\nexport const findUser = ({ userid, password}) => {\r\n    console.log(userid + \", \" + password)\r\n    try {\r\n        let userOne = users.findOne({ userid, password });\r\n        if (userOne) {\r\n            return { status: \"success\", message: \"로그인 성공!\" };\r\n        } else {\r\n            return { status: \"fail\", message: \"로그인 실패 : 사용자, 암호를 확인하세요\" };\r\n        }\r\n    } catch(ex) {\r\n        return { status: \"fail\", message: \"로그인 실패 : \" + ex };\r\n    }\r\n} \r\n\r\nexport const createUser = ({ userid, password, username }) => {\r\n    try {\r\n        let doc = users.findOne({ userid })\r\n        if (doc)  throw new Error(\"이미 존재하는 사용자입니다.\");\r\n        users.insert({ userid, password, username });\r\n        //샘플 데이터\r\n        todoList.insert({ userid, id: new Date().getTime(), todo: \"ES6공부를 해야 합니다\", desc:\"리액트 학습을 위해 ES6를 익혀야 합니다.\" });\r\n        todoList.insert({ userid, id: new Date().getTime()+1, todo: \"리액트 학습\", desc:\"리액트 학습을 해야 합니다\" }, );\r\n        return { status: \"success\", message: \"사용자 등록 성공!\" };\r\n    } catch  (ex) {\r\n        return { status: \"fail\", message: \"사용자 등록 실패 : \" + ex.message };\r\n    }\r\n}\r\n\r\nexport const getTodoList = ({ userid }) => {\r\n    try {\r\n        let result = [];\r\n        let queryResult = todoList.chain().find({ userid }).simplesort(\"regts\").data();\r\n    \r\n        for (var i = 0; i < queryResult.length; i++) {\r\n          let item = { ...queryResult[i] };\r\n          delete item.meta;\r\n          delete item[\"$loki\"];\r\n          delete item.owner;\r\n          result.push(item);\r\n        }\r\n        return { status: \"success\", todoList: result };\r\n    } catch (ex) {\r\n        return { status: \"fail\", message: \"조회 실패 : \" + ex };\r\n    }\r\n};\r\n\r\nexport const addTodo = ({ userid, todo, desc }) => {\r\n    try {\r\n      if (todo === null || todo.trim() === \"\") {\r\n        throw new Error(\"할일을 입력하셔야 합니다.\");\r\n      }\r\n      let item = { userid: userid, id: new Date().getTime(), todo, desc };\r\n      todoList.insert(item);\r\n      return { status: \"success\", message: \"추가 성공\", item: { id: item.id, todo: item.todo, desc:item.desc } };\r\n    } catch (ex) {\r\n      return { status: \"fail\", message: \"추가 실패 : \" + ex };\r\n    }\r\n};\r\n\r\nexport const deleteTodo = ({ userid, id }) => {\r\n    try {\r\n      let one = todoList.findOne({ userid, id });\r\n      if (one !== null) {\r\n        todoList.remove(one);\r\n        return { status: \"success\", message: \"삭제 성공\", item: { id: one.id, todo: one.todo, desc:one.desc } };\r\n      } else {\r\n        return { status: \"fail\", message: \"삭제 실패 : 삭제하려는 데이터가 존재하지 않음\" };\r\n      }\r\n    } catch (ex) {\r\n      return { status: \"fail\", message: \"삭제 실패 : \" + ex };\r\n    }\r\n};\r\n\r\n\r\n"],"mappings":"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"}